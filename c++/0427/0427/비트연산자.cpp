//비트연산자

/*
데이터 사용 단위 : byte
저장의 최소 단위 : bit
1byte == 8bit
문자는 1byte의 크기로 구성 == 문자는 8bit의 크기로 구성된다.
====================================================================
bit
- 0과 1만을 저장할 수 있는 저장의 최소단위
ex) 1bit(2개 : 2의 1승) : 0,1
	2bit(4개 : 2의 2승) : 00,01,10,11
	3bit(8개 : 2의 3승) : 000,001,010,100,101,110,111

- bit는 2진수 관점에서 이해
====================================================================
2진수와 10진수의 표기법 변환 연산

2진수 => 10진수
10진수 => 2진수

=====================================================================
비트 연산자(&, |, ~, ^, <<, >>)
-각 연산자의 성질
-알고리즘 : 비트켜기, 비트끄기, 비트마스크
*/
#include <iostream>
using namespace std;

//비트연산자
void exam1()
{
	int num1 = 7;
	int num2 = 4;
	int result;

	result = num1 && num2;	//num1 : 0000 0111
							//num2 : 0000 0100
							//	 & : 0000 0100 =>4
	cout << result << endl;

	result = num1 && num2;	//num1 : 0000 0111
							//num2 : 0000 0100
							//	 & : 0000 0100 =>4
	cout << result << endl;
	
	//1의 보수연산 (마이너스로 변환 연산) : 자신의 값이 음수로 변경되고, 
	//										값은 원래의 값보다 1증가
	
	result = ~num1;			//num : 0000 0111
							// ~  : 1111 1000
	cout << result << endl;	//-8

	result = ~num2;
	cout << result << endl;	//-5

	//2의 보수연산
	result = ~num1 + 1;		//num : 7
	cout << result << endl;	//num : -7

	//====================================================
	result = num1 << 3;	//비트시프트 연산자( 2칸 왼쪽으로 이동)
						//num1 : 0000 0111
						//<< 2 : 0001 1100
						//2의 3승의 곱 : 7 * 2의3승
	cout << result << endl;
}

//8명의 출결 정보를 int attend변수에 저장
//int type은 8bit로 가정

void exma2()
{
	int attend = 0;		//0000 0000

	//출석체크(0->1) : 비트켜기

	//2번 학생 출석
	attend = attend | 4;	//attend : 0000 0000
							//	   4 : 0000 0100
							//    |  : 0000 0100
	//5번 학생 출석	
	attend = attend | 32;	//attend : 0000 0100
							//	  32 : 0010 0000
							//     | : 0010 0100

	//2번학생이 출석했나 : 특정 비트값이 1인가 -> 비트마스크 연산
	int result = attend & 4;	//attend : 0010 0100
								//	   4 : 0000 0100
								//     & : 0000 0100

	//3번 학생이 출석했나
	result = attend & 8;		//attend : 0010 0100
								//     8 : 0000 0100
								//     & : 0000 0000

	//2번학생이 결석했는데 실수로 출석처리 (1->0) : 비트끄기연산
	attend = attend & ~4;		//attend : 0010 0100
								//     4 : 0000 0100
								//     ~ : 1111 1011
								//     & : 0010 0010
}

int main()
{
	exam1();
	return 0;
}